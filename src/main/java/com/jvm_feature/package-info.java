package com.jvm_feature;
/**
 * by 深入理解Java虚拟机：JVM高级特性与最佳实践
 * demo-springboot-interview\src\main\java\com\jvm_feature\_6_3\TestClass.class
 *  0  1  2  3  4  5  6  7   8  9  A  B  C  D  E  F
 * CA FE BA BE 00 00 00 34  00 16 0A 00 04 00 12 09
 * 00 03 00 13 07 00 14 07  00 15 01 00 01 6D 01 00
 * 01 49 01 00 06 3C 69 6E  69 74 3E 01 00 03 28 29
 * 56 01 00 04 43 6F 64 65  01 00 0F 4C 69 6E 65 4E
 * 75 6D 62 65 72 54 61 62  6C 65 01 00 12 4C 6F 63
 * 61 6C 56 61 72 69 61 62  6C 65 54 61 62 6C 65 01
 * 00 04 74 68 69 73 01 00  20 4C 63 6F 6D 2F 6A 76
 * 6D 5F 66 65 61 74 75 72  65 2F 5F 36 5F 33 2F 54
 * 65 73 74 43 6C 61 73 73  3B 01 00 03 69 6E 63 01
 * 00 03 28 29 49 01 00 0A  53 6F 75 72 63 65 46 69
 * 6C 65 01 00 0E 54 65 73  74 43 6C 61 73 73 2E 6A
 * 61 76 61 0C 00 07 00 08  0C 00 05 00 06 01 00 1E
 * 63 6F 6D 2F 6A 76 6D 5F  66 65 61 74 75 72 65 2F
 * 5F 36 5F 33 2F 54 65 73  74 43 6C 61 73 73 01 00
 * 10 6A 61 76 61 2F 6C 61  6E 67 2F 4F 62 6A 65 63
 * 74 00 21 00 03 00 04 00  00 00 01 00 02 00 05 00
 * 06 00 00 00 02 00 01 00  07 00 08 00 01 00 09 00
 * 00 00 2F 00 01 00 01 00  00 00 05 2A B7 00 01 B1
 * 00 00 00 02 00 0A 00 00  00 06 00 01 00 00 00 03
 * 00 0B 00 00 00 0C 00 01  00 00 00 05 00 0C 00 0D
 * 00 00 00 01 00 0E 00 0F  00 01 00 09 00 00 00 31
 * 00 02 00 01 00 00 00 07  2A B4 00 02 04 60 AC 00
 * 00 00 02 00 0A 00 00 00  06 00 01 00 00 00 07 00
 * 0B 00 00 00 0C 00 01 00  00 00 07 00 0C 00 0D 00
 * 00 00 01 00 10 00 00 00  02 00 11
 *
 * 1.CA FE BA BE 4字节称之为魔数(magic number),jvm所识别认可的文件标志
 *  第5 6 字节称为次版本号，7 8 为主版本号，0x34，转为10进制是52。
 * 2.紧接着主次版本号之后的是常量池入口，常量池是最大、与其他项目关联最多，
 *  还是在Class文件中第一个出现的表类型数据项目。
 *  1> 常量池数量不固定，所以入口前需一个u2类型的数据来计数，代表常量池容量计数值(constant_pool_count),
 *      注意！计数从 1 开始[只有常量池的容量计数是从1开始]
 *      ？> 为什么不从0开始？
 *          满足后面某些指向常量池的索引值的数据在特定情况下需要表达“不引用任何一个常量池项目”的含义满足后面某些指向常量池
 *          的索引值的数据在特定情况下需要表达“不引用任何一个常量池项目”的含义
 *  2> 偏移地址：0x00000008 ~ 0x00000009[u2] 值为 0x0016，十进制是22，代表常量池有21个常量，
 *      索引值范围为1～21。
 *
 *  3> 常量池中主要存放两大类常量：字面量（Literal）和符号引用（Symbolic References）。
 *      字面量如：文本字符串、声明为final的常量值
 *      符号引用则属于编译原理方面，如：   类和接口的全限定名（Fully Qualified Name）
 *                                      字段的名称和描述符（Descriptor）
 *                                      方法的名称和描述符
 *  4> 当虚拟机运行时，需要从常量池获得对应的符号引用，再在类创建时或运行时解析、翻译到具体的内存地址之中。
 *  5> 常量池中每一项常量都是一个表,表开始的第一位是一个u1类型的标志位(tag),代表当前这个常量属于哪种常量类型。
 *
 *
 *
 *
 *
 * */